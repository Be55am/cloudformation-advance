AWSTemplateFormatVersion: 2010-09-09
Description: a detailed ec2 stack for training  
#PARAMS###################################################################################################
Parameters:
  #SSH keys parameter will be selected from the available keys in the region
  # MySSHKeyName:
  #   Description: Select a key name from the list
  #   Type: AWS::EC2::KeyPair::KeyName
  #   Default: cfn-key-1

  EnvironmentName:
    Description: select the deployment environment
    Type: String
    Default: dev
    ConstraintDescription: must be dev or prod or qa
    AllowedValues:
      - dev
      - prod
      - qa

  AvailabilityZone: # availability zone can be selected are a and b
    Description: Select an availability Zone
    Type: String
    Default: us-west-2a
    AllowedValues:
      - us-west-2a
      - us-west-2b
  
  # this parameter should be added in the parameter store usually ssm types are used for sensitive data
  # to create one go to System Manager > Parameters Store and add a new One.
  #MyInstanceType:
  #  Description: Select an Instance Type from SSM (enter the param name)
  #  Type: AWS::SSM::Parameter::Value<String>

#MAPS##########################################################################################################
Mappings:
  MyRegionMap: # Map Name
    us-east-2: # Top level key
      HVM64: ami-0a243dbef00e96192 # second level key
    us-west-2:
      HVM64: ami-0a243dbef00e96192

  MyEnvironmentMap:
    dev: 
      instanceType: t2.micro
    prod:
      instanceType: t2.small
#CONDITIONS####################################################################################################
Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName, prod]
  CreateProdSecurityGroup: !Equals [!Ref EnvironmentName, prod]
  CreateDevSecurityGroup: !Not [{Condition: CreateProdSecurityGroup}] # if Not CreateproduSecurityGroup
  IfRegionUsekeyName: !Or [!Equals [!Ref 'AWS::Region', 'us-east-2'], !Equals [!Ref 'AWS::Region', 'us-west-2']]
#RESOURCES#####################################################################################################
Resources:
  MyVMInstanceTest:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !If [IfRegionUsekeyName, cfn-key-1, cfn-key-2] # if this condition returns true use key1 else use key2
      ImageId: !FindInMap 
        - MyRegionMap #Map Name
        - !Ref 'AWS::Region' # Top level key
        - HVM64 # second level key
      InstanceType: !FindInMap 
        - MyEnvironmentMap
        - !Ref EnvironmentName
        - instanceType
      SecurityGroups: 
        - !If [CreateProdSecurityGroup, !Ref ProdSecurityGroup, !Ref 'AWS::NoValue'] #if condition is true associate SG else NoValue
        - !If [CreateDevSecurityGroup, !Ref DevSecurityGroup, !Ref 'AWS::NoValue']
        - !Ref SSHSecurityGroup #a function that refers to that resource or a parameter value

      AvailabilityZone: !Ref AvailabilityZone
      Tags:
        - Key: Name
          Value: cloudformation-training-instance
  
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:  security group allow ssh port only
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 #all the internet
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  ProdSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateProdSecurityGroup
    Properties:
      GroupDescription: Security group for prod environment only
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Security Group For Prod only port 80

  DevSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDevSecurityGroup
    Properties:
      GroupDescription: Security group for prod environment only
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 81
          ToPort: 81
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Security Group For Prod only port 80

  MyElasticIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties:
      InstanceId: !Ref MyVMInstanceTest

#OUTPUTS######################################################################################################
Outputs:
  MyStackRegion:
    Value: !Ref "AWS::Region"
  PublicIp: # getting the public ip address of the instance
    Value: !GetAtt MyVMInstanceTest.PublicIp
  MyinstanceId:
    Value: !Ref MyVMInstanceTest
    Description: My EC2 id 
  MyInstanceAvailabilityZone:
    Description: Instance Availability Zone
    Value: !GetAtt MyVMInstanceTest.AvailabilityZone
    Export: 
      Name: !Sub "${AWS::StackName}-InstanceAZ" # Substitute the name with StackName + '-InstanceAZ'

  MyInstanceSecurityGroup:
    Description: SSH Security Group
    Value: !Ref SSHSecurityGroup
    Export: 
      Name: !Sub "${AWS::StackName}-SSHSecurityGroup" 